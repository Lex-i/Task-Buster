"""
Django settings for taskbuster project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.core.exceptions import ImproperlyConfigured
import datetime
from django.utils.timezone import now
from django.utils.translation import ugettext_lazy as _
LANGUAGES = (
    ('en', _('English')),
    ('ca', _('Catalan')),
    ('ru', _('Russian')),
)
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# +The next line points to the folder containing the folder that contains the actual file, i.e. the folder taskbuster
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

def get_env_variable(var_name):
    try:
        return os.environ[var_name]
    except KeyError:
        error_msg = "Set the %s environment variable" % var_name
        raise ImproperlyConfigured(error_msg)


# +the SECRET_KEY added to the postactivate file in the virtual environment
SECRET_KEY = get_env_variable('SECRET_KEY')
# +When deploying your app, you will have to specify the SECRET_KEY  in your server

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # The Django sites framework is required
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'taskbuster.urls'

WSGI_APPLICATION = 'taskbuster.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'  # +define a default time zone

USE_I18N = True     # + load the Django internationalization machinery

USE_L10N = True     # + enable Localization

USE_TZ = True   # +enable the time zone support


LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# +The next line tells Django to look for static files in a folder named static inside each of our apps.
STATIC_URL = '/static/'
# +The next line tell Django to look for static files in the taskbuster/static directory
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# Templates files
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],  # +It tells Django where are templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',  # + load the Django internationalization processor
                # 'django.core.context_processors.request',   # Required by allauth template tags
            ],
        },
    },
]
# +Authentication Backend used by allauth
AUTHENTICATION_BACKENDS = (
    # Default backend -- used to login by username in Django admin
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
)

INSTALLED_APPS += (
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Login via Google
    'allauth.socialaccount.providers.google',
)

"""
go to the admin interface at http://127.0.0.1:8000/admin/sites/site
and create a Site for the localhost, 127.0.0.1:8000,
or your website domain for production. If you have an example.com
site defined, modify it so it has an id equal to the SITE_ID=1
setting variable. Otherwise, if you create a new site,
you have to change the settings variable, SITE_ID,
with the ID of the site you just created (probably 2).
"""

SITE_ID = 1

"""
This will make allauth to ask for the email (if possible)
in the authorization process. It will ask it to Google,
without any verification process, and after logging in,
it will redirect the user to the home page.
"""

ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = "none"
SOCIALACCOUNT_QUERY_EMAIL = True
LOGIN_REDIRECT_URL = "/"

# +enable time zone support, all the datetime instances will be aware
now_naive = datetime.datetime.now()

# +if you have time zone support enabled, i.e. USE_TZ=True,
# +there is a shortcut to obtain the current aware time
now_aware = now()
